- name: create a ec2 instance
  hosts: local
  connection: local
  tasks:
    - name: Launch instance
      ec2:
        key_name: key_pair_name
        instance_type: t2.micro
        image: ami-xxxxxxx
        instance_tags:
          Name: Ansible_test
        wait: yes
        group: Security_group_name
        count: 2
        vpc_subnet_id: subnet-xxxxxxx
        assign_public_ip: yes
        region: us-xxxx-x
      register: ec2
    - debug: var=ec2
    - name: Add new instance to host group
      add_host: hostname={{ ec2.instances[0].private_ip  }} groupname=launched
      with_dict: ec2
      register: ssh
    - debug: var=ssh
    - name: Add new instance to host group
      add_host: hostname={{ ec2.instances[1].private_ip}} groupname=test
      with_dict: ec2
    - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
      local_action: lineinfile
                    dest="/etc/ansible/hosts"
                    regexp={{ item.private_ip }}
                    insertafter="[webserver]" line={{ item.private_ip }}
      with_items: '{{ec2.instances}}'
   # - meta : refresh_inventory
    - name: Wait for server to restart
      local_action: wait_for
                    host={{ inventory_hostname }}
                   port=22
                   delay=240
                   timeout=300
- name: copy files in the new machines
  hosts: launched
  remote_user: ubuntu
  become_method: sudo
  become: true
  tasks:
    - name: See if it is there
      debug: var=group_names
    - name: copy files to the new macine
      copy: src=/etc/ansible/launchEc2/demo.txt dest=/home/ubuntu/demo.txt mode=0644
- name: copy files in the new machines
  hosts: test
  remote_user: ubuntu
  become_method: sudo
  become: true
  tasks:
    - name: See if it is there
      debug: var=group_names
    - name: copy files to the new macine
      copy: src=/etc/ansible/launchEc2/demo.txt dest=/home/ubuntu/demo.txt mode=0644